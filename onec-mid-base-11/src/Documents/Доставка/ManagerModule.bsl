

#Область ПрограммныйИнтерфейс 

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Анекета покупателя
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента";
	КомандаПечати.Представление = НСтр("ru = 'Анкета клиента'");
	КомандаПечати.Порядок = 5;
	
	// Товарная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТоварнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная'");
	КомандаПечати.Порядок = 10;
	
	// Договор
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Договор";
	КомандаПечати.Представление = НСтр("ru = 'Договор'");
	КомандаПечати.Порядок = 12;

	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента,ТоварнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.Порядок = 15;

	
КонецПроцедуры  

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АнкетаКлиента");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАнкетаКлиента(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Анкета клиента'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.Доставка.ПФ_MXL_АнкетаКлиента";
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ТоварнаяНакладная");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьТоварнаяНакладная(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Товарная накладная'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.Доставка.ПФ_MXL_ТоварнаяНакладная";
	КонецЕсли;  
	
	ПечатнаяФорма =  УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Договор");
	Если ПечатнаяФорма <> Неопределено Тогда
		ОфисныеДокументы = НапечататьДоговорDOCX(МассивОбъектов);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Договор (MS Word)'");
		ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти     

#Область СлужебныеПроцедурыИФункции
   
Функция ПечатьАнкетаКлиента(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АнкетаКлиента";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Доставка.ПФ_MXL_АнкетаКлиента");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1; 
		
		ОбластьЗаголовкаАнкеты = Макет.ПолучитьОбласть("Заголовок");
		ОбластьОсновнаяОбласть = Макет.ПолучитьОбласть("ОсновнаяОбласть");
		
		ОбластьЗаголовкаАнкеты.Параметры.Заполнить(ДанныеДокументов);
		
        ТабличныйДокумент.Вывести(ОбластьЗаголовкаАнкеты); 
		
		Ссылка = ПолучитьНавигационнуюСсылку(ДанныеДокументов.Ссылка);
		ДанныйQRКода = ГенерацияШтрихкода.ДанныеQRКода(Ссылка,2,120);
		
		Если Не ТипЗнч(ДанныйQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе 		
			Картинка = Новый Картинка(ДанныйQRКода); 
			ОбластьОсновнаяОбласть.Рисунки.РисунокQRКод.Картинка = Картинка;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьОсновнаяОбласть);		
		
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТоварнаяНакладная(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ТоварнаяНакладная";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Доставка.ПФ_MXL_ТоварнаяНакладная");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		/// Вывод области заголовка
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокументов);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок); 
		
		/// Вывод области Грузоотправитель 
		ОбластьГрузоотправитель = Макет.ПолучитьОбласть("Грузоотправитель");
		ОбластьГрузоотправитель.Параметры.Заполнить(ДанныеДокументов);
		ТабличныйДокумент.Вывести(ОбластьГрузоотправитель);	
		
		/// Вывод области Грузополучатель 
		ОбластьГрузополучатель = Макет.ПолучитьОбласть("Грузополучатель");
		ОбластьГрузополучатель.Параметры.Заполнить(ДанныеДокументов);
		
		Ссылка = ПолучитьНавигационнуюСсылку(ДанныеДокументов.Ссылка);
		ДанныйQRКода = ГенерацияШтрихкода.ДанныеQRКода(Ссылка,2,120);
		
		Если Не ТипЗнч(ДанныйQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе 		
			Картинка = Новый Картинка(ДанныйQRКода); 
			ОбластьГрузополучатель.Рисунки.РисунокQRКод.Картинка = Картинка;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьГрузополучатель);	
		
		/// Вывод области ТоварШапка 
		ОбластьТоварШапка = Макет.ПолучитьОбласть("ТоварШапка");
		ТабличныйДокумент.Вывести(ОбластьТоварШапка); 
		
		/// Вывод строк номенклатур
		ТоварТаблица = Макет.ПолучитьОбласть("ТоварТаблица");
		
		ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ТоварТаблица.Параметры.Заполнить(ВыборкаТовары);
			ТабличныйДокумент.Вывести(ТоварТаблица);
		КонецЦикла;
		
		/// Вывод ГрузПринял  
		ОбластьГрузПринял = Макет.ПолучитьОбласть("ГрузПринял");
		ТабличныйДокумент.Вывести(ОбластьГрузПринял); 

        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доставка.Ссылка КАК Ссылка,
	               |	Доставка.Номер КАК Номер,
	               |	Доставка.Дата КАК Дата,
	               |	Доставка.Организация КАК Организация,
	               |	Доставка.Контрагент КАК Контрагент,
	               |	Доставка.Договор КАК Договор,
	               |	Доставка.АдресДоставки КАК АдресДоставки,
	               |	Доставка.Основание КАК Основание,
	               |	Доставка.Комментарий КАК Комментарий,
	               |	Доставка.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество
	               |	) КАК Товары
	               |ИЗ
	               |	Документ.Доставка КАК Доставка
	               |ГДЕ
	               |	Доставка.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция НапечататьДоговорDOCX(МассивОбъектов) 
	// Создаём пустое соответствие для размещения печатных форм OpenXМL — результат функции
	ОфисныеДокументы = Новый Соответствие;
	
	// Готовим макет для формирования печатной формы OpenXML
	МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Документ.Доставка.ПФ_DOC_Договор");
	Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента,
	Неопределено);  
	
	// Создаём структуру областей формируемой печатной формы OpenXМL
	ОписаниеОбластей = Новый Структура;
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ТекстДоговора", "Общая");
	
	// Получаем данные для печати из базы данных
	ДанныеДляПечати = ДанныеДляПечатиДоговора(МассивОбъектов);
	
	Для Каждого ДанныеДокумента Из ДанныеДляПечати Цикл 
		
		// Готовим печатную форму в формате офисного документа
		ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
		
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ТекстДоговора"]);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента);
		
		АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
		ОфисныеДокументы.Вставить(АдресХранилищаПечатнойФормы, Строка(ДанныеДокумента.Ссылка));
		УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);
		
	КонецЦикла; 
	
	УправлениеПечатью.ОчиститьСсылки(Макет);
	
	Возврат ОфисныеДокументы;
		
КонецФункции  

Функция ДанныеДляПечатиДоговора(МассивОбъектов); 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доставка.Ссылка КАК Ссылка,
	               |	Доставка.Номер КАК Номер,
	               |	Доставка.Дата КАК Дата,
	               |	Доставка.Организация КАК Организация,
	               |	Доставка.Контрагент КАК Контрагент,
	               |	Доставка.Договор КАК Договор,
	               |	Доставка.Основание КАК Основание,
	               |	Организации.ИНН КАК ИННОрганизации,
	               |	Организации.КПП КАК КППОрганизации,
	               |	Контрагенты.ИНН КАК ИННКонтрагент,
	               |	Контрагенты.КПП КАК КППКонтрагент
	               |ИЗ
	               |	Документ.Доставка КАК Доставка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	               |		ПО Доставка.Организация = Организации.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	               |		ПО Доставка.Контрагент = Контрагенты.Ссылка
	               |ГДЕ
	               |	Доставка.Ссылка В(&МассивОбъектов)"; 
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеДокумента = Новый Структура; 
		ДанныеДокумента.Вставить("Ссылка", Выборка.Ссылка); 
		ДанныеДокумента.Вставить("Дата", Формат(Выборка.Дата,"ДЛФ=ДД"));
		ДанныеДокумента.Вставить("Организация", Выборка.Организация);
		ДанныеДокумента.Вставить("Контрагент", Выборка.Контрагент);
		ДанныеДокумента.Вставить("ИННОрганизации", Выборка.ИННОрганизации);
		ДанныеДокумента.Вставить("КППОрганизации", Выборка.КППОрганизации);
		ДанныеДокумента.Вставить("ИННКонтрагент", Выборка.ИННКонтрагент);
		ДанныеДокумента.Вставить("КППКонтрагент", Выборка.КППКонтрагент);
		
		Результат.Добавить(ДанныеДокумента);
		
	КонецЦикла;                             
	
	Возврат Результат;
		
КонецФункции


#КонецОбласти
