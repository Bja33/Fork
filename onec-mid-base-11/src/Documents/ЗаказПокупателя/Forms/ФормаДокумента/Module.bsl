
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//{{ Туманов М.А. от 02.11.2023
	// Вызов процедуры добавления элементов и команд на форму документа ЗаказПокупателя
	Тум_ДобавитьРеквизитыФорымы();
	//}}

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти


#Область Доработка
//{{ Туманов М.А. от: 02.11.2023
// Процедура добавления элементов на форму документа ЗаказПокупателя
&НаСервере
Процедура Тум_ДобавитьРеквизитыФорымы()
	// добавление ПоляВвода "КонтактноеЛицо"
	Если Элементы.Найти("Тум_КонтактноеЛицо") = Неопределено Тогда
		ГруппаФормыШапкаПраво = Элементы.Найти("ГруппаШапкаПраво");
		Если ГруппаФормыШапкаПраво <> Неопределено Тогда
			НовыйЭлемент = Элементы.Добавить("Тум_КонтактноеЛицо", Тип("ПолеФормы"), ГруппаФормыШапкаПраво);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ПутьКДанным = "Объект.Тум_КонтактноеЛицо";
			НовыйЭлемент.Заголовок = "Контактное лицо";
		КонецЕсли;
	КонецЕсли;
	
	// добавление группы формы "ГруппаПолеИКнопка" в группу формы "ГруппаШапкаЛево"
	Если Элементы.Найти("ГруппаПолеИКнопка") = Неопределено Тогда
		ГруппаФормыШапкаЛево = Элементы.Найти("ГруппаШапкаЛево");
		Если ГруппаФормыШапкаЛево <> Неопределено Тогда
			ГруппаФормыПолеИКнопка = Элементы.Добавить("ГруппаПолеИКнопка", Тип("ГруппаФормы"), ГруппаФормыШапкаЛево);
			ГруппаФормыПолеИКнопка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаФормыПолеИКнопка.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаФормыПолеИКнопка.ОтображатьЗаголовок = Ложь;
			ГруппаФормыПолеИКнопка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			
			// добавление поля ввода "СогласованнаяСкидка" в группу формы "ГруппаПолеИКнопка"
			Если Элементы.Найти("СогласованнаяСкидка") = Неопределено Тогда
				ПолеСогласованнаяСкидка = Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), ГруппаФормыПолеИКнопка);
				ПолеСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
				ПолеСогласованнаяСкидка.ПутьКДанным = "Объект.Тум_СогласованнаяСкидка";
				ПолеСогласованнаяСкидка.Заголовок = "Согласованная скидка";
				ПолеСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "Тум_СогласованнаяСкидкаПриИзменении");
			КонецЕсли;
			
			// добавление команды "ПересчитатьТаблицу"
			Если Команды.Найти("ПересчитатьТаблицу") = Неопределено Тогда
				НоваяКоманда = Команды.Добавить("ПересчитатьТаблицу");
				НоваяКоманда.Заголовок = "Пересчитать таблицу";
				НоваяКоманда.Действие = "ПересчитатьТаблицу";
				НоваяКоманда.Картинка = БиблиотекаКартинок.Обновить;
				НоваяКоманда.Отображение = ОтображениеКнопки.КартинкаИТекст;
			КонецЕсли;
			
			// добавление кнопоки для команды "ПересчитатьТаблицу" в группу формы "ГруппаПолеИКнопка"
			Если Элементы.Найти("ПересчитатьТаблицу") = Неопределено Тогда
				НоваяКнопка = Элементы.Добавить("ПересчитатьТаблицу", Тип("КнопкаФормы"), ГруппаФормыПолеИКнопка);
				НоваяКнопка.Заголовок = "Пересчитать таблицу";
				НоваяКнопка.ИмяКоманды = "ПересчитатьТаблицу";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицу(Команда)
	Для Каждого Строка Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
КонецПроцедуры

// Обработчик события "ПриИзменении" для поля формы Тум_СогласованнаяСкидка
&НаКлиенте
Процедура Тум_СогласованнаяСкидкаПриИзменении(Элемент)
	Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0 Тогда
		Тум_ЗадатьВопросПользователю();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Асинх Процедура Тум_ЗадатьВопросПользователю()
	Ответ = Ждать ВопросАсинх("Изменен процент скидки. Пересчитать таблицы товаров и услуг?", РежимДиалогаВопрос.ДаНет);
								
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Для Каждого Строка Из Объект.Товары Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;
		
		Для Каждого Строка Из Объект.Услуги Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
//}}
#КонецОбласти
