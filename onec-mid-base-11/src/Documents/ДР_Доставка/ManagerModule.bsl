
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Анкета клиента
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента";
	КомандаПечати.Представление = НСтр("ru = 'Анкета клиента'");
	КомандаПечати.Порядок = 5;   
	
	// Товарная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТоварнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная'");
	КомандаПечати.Порядок = 10; 
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента,ТоварнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.Порядок = 30; 
	
	// Договор доставки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДоговорДоставки";
	КомандаПечати.Представление = НСтр("ru = 'Договор доставки'");
	КомандаПечати.Порядок = 65;
	
КонецПроцедуры   

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
    	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АнкетаКлиента");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьАнкетаКлиента(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Анкета клиента'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ДР_Доставка.ПФ_MXL_АнкетаКлиента";
	КонецЕсли; 
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ТоварнаяНакладная");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьТоварнойНакладной(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Товарная накладная'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ДР_Доставка.ПФ_MXL_ТоварнаяНакладная";
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ДоговорДоставки");
	Если ПечатнаяФорма <> Неопределено Тогда
		ОфисныеДокументы = НапечататьДоговорДоставки(МассивОбъектов);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Договор доставки (MS Word)'");
		ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьТоварнойНакладной(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДР_Доставка.ПФ_MXL_ТоварнаяНакладная");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДР_Доставка.Ссылка,
	|	ДР_Доставка.Дата,
	|	ДР_Доставка.Контрагент,
	|	ДР_Доставка.Номер,
	|	ДР_Доставка.Организация,
	|	ДР_Доставка.Ответственный,
	|	ДР_Доставка.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество
	|	)
	|ИЗ
	|	Документ.ДР_Доставка КАК ДР_Доставка
	|ГДЕ
	|	ДР_Доставка.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Номер = Выборка.Номер;
		ОбластьЗаголовок.Параметры.Дата  = Формат(Выборка.Дата,"ДФ='dd.MM.yyyy ""г.""'");
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		
		СсылкаНаДокумент = ПолучитьНавигационнуюСсылку(Выборка.Ссылка);
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(СсылкаНаДокумент, 1, 120);
		
		Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			КартинкаQRКода = Новый Картинка(ДанныеQRКода);
			Шапка.Рисунки.КартинкаQRКода.Картинка = КартинкаQRКода;
		КонецЕсли;
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок,
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);  
		
	КонецЦикла;
	
	Возврат ТабДок;

КонецФункции

Функция ПечатьАнкетаКлиента(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДР_Доставка.ПФ_MXL_АнкетаКлиента");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДР_Доставка.Ссылка,
	|	ДР_Доставка.Дата,
	|	ДР_Доставка.Номер
	|ИЗ
	|	Документ.ДР_Доставка КАК ДР_Доставка
	|ГДЕ
	|	ДР_Доставка.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл 
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Номер = Выборка.Номер;
		ОбластьЗаголовок.Параметры.Дата  = Формат(Выборка.Дата,"ДФ='dd.MM.yyyy ""г.""'");
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		
		СсылкаНаДокумент = ПолучитьНавигационнуюСсылку(Выборка.Ссылка);
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(СсылкаНаДокумент, 1, 120);
		
		Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			КартинкаQRКода = Новый Картинка(ДанныеQRКода);
			Шапка.Рисунки.КартинкаQRКода.Картинка = КартинкаQRКода;
		КонецЕсли;
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок,
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);  
			
		КонецЦикла;
		
		Возврат ТабДок;
	
КонецФункции

Функция НапечататьДоговорДоставки(МассивОбъектов) 
	
	// Создаём пустое соответствие для размещения печатных форм OpenXМL — результат функции
    ОфисныеДокументы = Новый Соответствие;
    
    // Готовим макет для формирования печатной формы OpenXML
    МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Документ.ДР_Доставка.ПФ_DOC_ДоговорДоставки");
    Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента, Неопределено);  
        
    // Создаём структуру областей формируемой печатной формы OpenXМL
    ОписаниеОбластей = Новый Структура;
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ТекстДоговора", "Общая");
    
    // Получаем данные для печати из базы данных
    // Функцию ДанныеДляПечатиДоговора необходимо разработать самостоятельно
    ДанныеДляПечати = ДанныеДляПечатиДоговора(МассивОбъектов);
    
    Для Каждого ДанныеДокумента Из ДанныеДляПечати Цикл 
        
        // Готовим печатную форму в формате офисного документа
        ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
        
        //@skip-check wrong-string-literal-content
        Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ТекстДоговора"]);
        УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента);
    
        АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
        ОфисныеДокументы.Вставить(АдресХранилищаПечатнойФормы, Строка(ДанныеДокумента.ДоставкаСсылка));
        УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);
        
    КонецЦикла;        
    
    УправлениеПечатью.ОчиститьСсылки(Макет);
    
    Возврат ОфисныеДокументы;	
    
КонецФункции  

Функция ДанныеДляПечатиДоговора(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДР_Доставка.Ссылка КАК ДоставкаСсылка,
	|	ДР_Доставка.Организация КАК ПеревозчикОрганизация,
	|	ДР_КонтактныеЛица.Наименование КАК ПеревозчикКонтактноеЛицо,
	|	ДР_КонтактныеЛица.Должность КАК ПеревозчикДолжность,
	|	ДР_КонтактныеЛица.ДействуетНаОсновании КАК ПеревозчикДействуетНаОсновании,
	|	ДР_Доставка.Организация.ИНН КАК ПеревозчикИНН,
	|	ДР_Доставка.Организация.КПП КАК ПеревозчикКПП,
	|	ДР_Доставка.Организация.КонтактнаяИнформация.(
	|		Представление КАК ОрганизацияПредставление
	|	) КАК ПеревозчикАдрес,
	|	ДР_Доставка.Контрагент КАК Контрагент,
	|	ДР_Доставка.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.Контрагент КАК ОтправительОрганизация,
	|	РеализацияТоваровУслуг.ДР_КонтактноеЛицо.Наименование КАК ОтправительКонтактноеЛицо,
	|	РеализацияТоваровУслуг.ДР_КонтактноеЛицо.Должность КАК ОтправительДолжность,
	|	РеализацияТоваровУслуг.ДР_КонтактноеЛицо.ДействуетНаОсновании КАК ОтправительДействуетНаОсновании,
	|	РеализацияТоваровУслуг.Контрагент.ИНН КАК ОтправительИНН,
	|	РеализацияТоваровУслуг.Контрагент.КПП КАК ОтправительКПП,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	|	РеализацияТоваровУслуг.Контрагент.КонтактнаяИнформация.(
	|		Представление КАК КонтрагентПредставление
	|	) КАК ОтправительАдрес,
	|	РеализацияТоваровУслуг.Товары.(
	|		Номенклатура КАК ТоварыНоменклатура,
	|		Сумма КАК ТоварыСумма
	|	) КАК Товары,
	|	РеализацияТоваровУслуг.Услуги.(
	|		Номенклатура КАК УслугиНоменклатура,
	|		Сумма КАК УслугиСумма
	|	) КАК Услуги
	|ИЗ
	|	Документ.ДР_Доставка КАК ДР_Доставка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ДР_Доставка.Основание = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДР_КонтактныеЛица КАК ДР_КонтактныеЛица
	|		ПО ДР_Доставка.Организация = ДР_КонтактныеЛица.Владелец
	|ГДЕ
	|	ДР_Доставка.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Результат = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеДоговора = Новый Структура;
		ДанныеДоговора.Вставить("ДоставкаСсылка", Выборка.ДоставкаСсылка);
		ДанныеДоговора.Вставить("ПеревозчикОрганизация", Выборка.ПеревозчикОрганизация); 
		ПеревозчикДолжностьКонтактноеЛицо = Строка(Выборка.ПеревозчикДолжность) + " " + Строка(Выборка.ПеревозчикКонтактноеЛицо);
		ДанныеДоговора.Вставить("ПеревозчикКонтактноеЛицо", ПеревозчикДолжностьКонтактноеЛицо); 
		ДанныеДоговора.Вставить("ПеревозчикДействуетНаОсновании", Выборка.ПеревозчикДействуетНаОсновании);
		ДанныеДоговора.Вставить("ПеревозчикИНН", Выборка.ПеревозчикИНН);  
		ДанныеДоговора.Вставить("ПеревозчикКПП", Выборка.ПеревозчикКПП);
		ДанныеДоговора.Вставить("Контрагент", Выборка.Контрагент);
		ДанныеДоговора.Вставить("АдресДоставки", Выборка.АдресДоставки);
		ДанныеДоговора.Вставить("ОтправительОрганизация", Выборка.ОтправительОрганизация); 
		ОтправительДолжностьКонтактноеЛицо = Строка(Выборка.ОтправительДолжность) + " " + Строка(Выборка.ОтправительКонтактноеЛицо);
		ДанныеДоговора.Вставить("ОтправительКонтактноеЛицо", ОтправительДолжностьКонтактноеЛицо); 
		ДанныеДоговора.Вставить("ОтправительДействуетНаОсновании", Выборка.ОтправительДействуетНаОсновании);
		ДанныеДоговора.Вставить("ОтправительИНН", Выборка.ОтправительИНН);  
		ДанныеДоговора.Вставить("ОтправительКПП", Выборка.ОтправительКПП);
		ДанныеДоговора.Вставить("СуммаДокумента", Выборка.СуммаДокумента);
		
		ТаблицаПеревозчикАдрес = Выборка.ПеревозчикАдрес;
		ВыборкаПеревозчикАдреса = ТаблицаПеревозчикАдрес.Выбрать();
		
		Пока ВыборкаПеревозчикАдреса.Следующий() Цикл
			ДанныеДоговора.Вставить("ПеревозчикАдрес", ВыборкаПеревозчикАдреса.ОрганизацияПредставление);			
		КонецЦикла;
		
		ТаблицаОтправительАдрес = Выборка.ОтправительАдрес;
		ВыборкаОтправительАдреса = ТаблицаОтправительАдрес.Выбрать();
		
		Пока ВыборкаОтправительАдреса.Следующий() Цикл
			ДанныеДоговора.Вставить("ОтправительАдрес", ВыборкаОтправительАдреса.КонтрагентПредставление);			
		КонецЦикла; 
		
		ТаблицаТовары = Выборка.Товары;
		ВыборкаТовары = ТаблицаТовары.Выбрать();
		НоменлатураЦена = 0;
		НоменлатураСписок = "";
		
		Пока ВыборкаТовары.Следующий() Цикл 
			НоменлатураСписок = Строка(НоменлатураСписок) + ", " + ВыборкаТовары.ТоварыНоменклатура;
			НоменлатураЦена   = Число(НоменлатураЦена) + Число(ВыборкаТовары.ТоварыСумма);						
		КонецЦикла; 
		ДанныеДоговора.Вставить("НоменлатураСписок", НоменлатураСписок); 
		ДанныеДоговора.Вставить("НоменлатураЦена", НоменлатураЦена);
		
		ТаблицаУслуги = Выборка.Услуги;
		ВыборкаУслуги = ТаблицаУслуги.Выбрать();
		
		Пока ВыборкаУслуги.Следующий() Цикл
			
			Если Строка(ВыборкаУслуги.УслугиНоменклатура) = "Доставка по городу" Тогда
				ДанныеДоговора.Вставить("ЦенаДоставки", ВыборкаУслуги.УслугиСумма);		
			ИначеЕсли Строка(ВыборкаУслуги.УслугиНоменклатура) = "Погрузка / разгрузка" Тогда
				ДанныеДоговора.Вставить("ПогрузкаРазгрузка", ВыборкаУслуги.УслугиСумма);	
			КонецЕсли;
									
		КонецЦикла;		
			
		Результат.Добавить(ДанныеДоговора);
		
	КонецЦикла;
	
	Возврат Результат;
		
КонецФункции

#КонецОбласти

#КонецЕсли

